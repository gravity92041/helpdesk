CREATE TABLE roles (
                       id int generated by default as identity primary key ,
                       name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE users (
                       id int generated by default as identity primary key ,
                       username VARCHAR(50) NOT NULL UNIQUE,
                       password VARCHAR(255) NOT NULL,
                       email VARCHAR(100) NOT NULL UNIQUE,
                       role_id INT NOT NULL REFERENCES roles(id)
);

CREATE TABLE categories (
                            id int generated by default as identity primary key ,
                            name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE priorities (
                            id int generated by default as identity primary key ,
                            level VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE tickets (
                         id int generated by default as identity primary key ,
                         title VARCHAR(100) NOT NULL,
                         description VARCHAR NOT NULL,
                         user_id INT NOT NULL,
                         category_id INT NOT NULL,
                         priority_id INT NOT NULL,
                         created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                         status VARCHAR(50) DEFAULT 'Open',
                         FOREIGN KEY (user_id) REFERENCES users(id),
                         FOREIGN KEY (category_id) REFERENCES categories(id),
                         FOREIGN KEY (priority_id) REFERENCES priorities(id)
);

CREATE TABLE comments (
                          id int generated by default as identity primary key ,
                          content TEXT NOT NULL,
                          ticket_id INT NOT NULL,
                          user_id INT NOT NULL,
                          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                          FOREIGN KEY (ticket_id) REFERENCES tickets(id),
                          FOREIGN KEY (user_id) REFERENCES users(id)
);
